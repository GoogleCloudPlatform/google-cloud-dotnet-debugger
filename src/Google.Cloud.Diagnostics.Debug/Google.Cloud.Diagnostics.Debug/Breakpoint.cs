// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: breakpoint.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Google.Cloud.Diagnostics.Debug {

  /// <summary>Holder for reflection information generated from breakpoint.proto</summary>
  public static partial class BreakpointReflection {

    #region Descriptor
    /// <summary>File descriptor for breakpoint.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static BreakpointReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChBicmVha3BvaW50LnByb3RvEh5nb29nbGUuY2xvdWQuZGlhZ25vc3RpY3Mu",
            "ZGVidWcaH2dvb2dsZS9wcm90b2J1Zi90aW1lc3RhbXAucHJvdG8izgMKCkJy",
            "ZWFrcG9pbnQSCgoCaWQYASABKAkSQAoIbG9jYXRpb24YAiABKAsyLi5nb29n",
            "bGUuY2xvdWQuZGlhZ25vc3RpY3MuZGVidWcuU291cmNlTG9jYXRpb24SQAoM",
            "c3RhY2tfZnJhbWVzGAMgAygLMiouZ29vZ2xlLmNsb3VkLmRpYWdub3N0aWNz",
            "LmRlYnVnLlN0YWNrRnJhbWUSEQoJYWN0aXZhdGVkGAQgASgIEi8KC2NyZWF0",
            "ZV90aW1lGAUgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcBIuCgpm",
            "aW5hbF90aW1lGAYgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcBIT",
            "CgtraWxsX3NlcnZlchgHIAEoCBITCgtleHByZXNzaW9ucxgIIAMoCRIRCglj",
            "b25kaXRpb24YCSABKAkSRwoVZXZhbHVhdGVkX2V4cHJlc3Npb25zGAogAygL",
            "MiguZ29vZ2xlLmNsb3VkLmRpYWdub3N0aWNzLmRlYnVnLlZhcmlhYmxlEjYK",
            "BnN0YXR1cxgLIAEoCzImLmdvb2dsZS5jbG91ZC5kaWFnbm9zdGljcy5kZWJ1",
            "Zy5TdGF0dXMi2gEKClN0YWNrRnJhbWUSEwoLbWV0aG9kX25hbWUYASABKAkS",
            "QAoIbG9jYXRpb24YAiABKAsyLi5nb29nbGUuY2xvdWQuZGlhZ25vc3RpY3Mu",
            "ZGVidWcuU291cmNlTG9jYXRpb24SOwoJYXJndW1lbnRzGAMgAygLMiguZ29v",
            "Z2xlLmNsb3VkLmRpYWdub3N0aWNzLmRlYnVnLlZhcmlhYmxlEjgKBmxvY2Fs",
            "cxgEIAMoCzIoLmdvb2dsZS5jbG91ZC5kaWFnbm9zdGljcy5kZWJ1Zy5WYXJp",
            "YWJsZSIsCg5Tb3VyY2VMb2NhdGlvbhIMCgRwYXRoGAEgASgJEgwKBGxpbmUY",
            "AiABKAUiqAEKCFZhcmlhYmxlEgwKBG5hbWUYASABKAkSDAoEdHlwZRgCIAEo",
            "CRINCgV2YWx1ZRgDIAEoCRI5CgdtZW1iZXJzGAQgAygLMiguZ29vZ2xlLmNs",
            "b3VkLmRpYWdub3N0aWNzLmRlYnVnLlZhcmlhYmxlEjYKBnN0YXR1cxgFIAEo",
            "CzImLmdvb2dsZS5jbG91ZC5kaWFnbm9zdGljcy5kZWJ1Zy5TdGF0dXMiKgoG",
            "U3RhdHVzEg8KB2lzZXJyb3IYASABKAgSDwoHbWVzc2FnZRgCIAEoCWIGcHJv",
            "dG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Diagnostics.Debug.Breakpoint), global::Google.Cloud.Diagnostics.Debug.Breakpoint.Parser, new[]{ "Id", "Location", "StackFrames", "Activated", "CreateTime", "FinalTime", "KillServer", "Expressions", "Condition", "EvaluatedExpressions", "Status" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Diagnostics.Debug.StackFrame), global::Google.Cloud.Diagnostics.Debug.StackFrame.Parser, new[]{ "MethodName", "Location", "Arguments", "Locals" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Diagnostics.Debug.SourceLocation), global::Google.Cloud.Diagnostics.Debug.SourceLocation.Parser, new[]{ "Path", "Line" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Diagnostics.Debug.Variable), global::Google.Cloud.Diagnostics.Debug.Variable.Parser, new[]{ "Name", "Type", "Value", "Members", "Status" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Diagnostics.Debug.Status), global::Google.Cloud.Diagnostics.Debug.Status.Parser, new[]{ "Iserror", "Message" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class Breakpoint : pb::IMessage<Breakpoint> {
    private static readonly pb::MessageParser<Breakpoint> _parser = new pb::MessageParser<Breakpoint>(() => new Breakpoint());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Breakpoint> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Diagnostics.Debug.BreakpointReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Breakpoint() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Breakpoint(Breakpoint other) : this() {
      id_ = other.id_;
      Location = other.location_ != null ? other.Location.Clone() : null;
      stackFrames_ = other.stackFrames_.Clone();
      activated_ = other.activated_;
      CreateTime = other.createTime_ != null ? other.CreateTime.Clone() : null;
      FinalTime = other.finalTime_ != null ? other.FinalTime.Clone() : null;
      killServer_ = other.killServer_;
      expressions_ = other.expressions_.Clone();
      condition_ = other.condition_;
      evaluatedExpressions_ = other.evaluatedExpressions_.Clone();
      Status = other.status_ != null ? other.Status.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Breakpoint Clone() {
      return new Breakpoint(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "location" field.</summary>
    public const int LocationFieldNumber = 2;
    private global::Google.Cloud.Diagnostics.Debug.SourceLocation location_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Diagnostics.Debug.SourceLocation Location {
      get { return location_; }
      set {
        location_ = value;
      }
    }

    /// <summary>Field number for the "stack_frames" field.</summary>
    public const int StackFramesFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Google.Cloud.Diagnostics.Debug.StackFrame> _repeated_stackFrames_codec
        = pb::FieldCodec.ForMessage(26, global::Google.Cloud.Diagnostics.Debug.StackFrame.Parser);
    private readonly pbc::RepeatedField<global::Google.Cloud.Diagnostics.Debug.StackFrame> stackFrames_ = new pbc::RepeatedField<global::Google.Cloud.Diagnostics.Debug.StackFrame>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Cloud.Diagnostics.Debug.StackFrame> StackFrames {
      get { return stackFrames_; }
    }

    /// <summary>Field number for the "activated" field.</summary>
    public const int ActivatedFieldNumber = 4;
    private bool activated_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Activated {
      get { return activated_; }
      set {
        activated_ = value;
      }
    }

    /// <summary>Field number for the "create_time" field.</summary>
    public const int CreateTimeFieldNumber = 5;
    private global::Google.Protobuf.WellKnownTypes.Timestamp createTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp CreateTime {
      get { return createTime_; }
      set {
        createTime_ = value;
      }
    }

    /// <summary>Field number for the "final_time" field.</summary>
    public const int FinalTimeFieldNumber = 6;
    private global::Google.Protobuf.WellKnownTypes.Timestamp finalTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp FinalTime {
      get { return finalTime_; }
      set {
        finalTime_ = value;
      }
    }

    /// <summary>Field number for the "kill_server" field.</summary>
    public const int KillServerFieldNumber = 7;
    private bool killServer_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool KillServer {
      get { return killServer_; }
      set {
        killServer_ = value;
      }
    }

    /// <summary>Field number for the "expressions" field.</summary>
    public const int ExpressionsFieldNumber = 8;
    private static readonly pb::FieldCodec<string> _repeated_expressions_codec
        = pb::FieldCodec.ForString(66);
    private readonly pbc::RepeatedField<string> expressions_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Expressions {
      get { return expressions_; }
    }

    /// <summary>Field number for the "condition" field.</summary>
    public const int ConditionFieldNumber = 9;
    private string condition_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Condition {
      get { return condition_; }
      set {
        condition_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "evaluated_expressions" field.</summary>
    public const int EvaluatedExpressionsFieldNumber = 10;
    private static readonly pb::FieldCodec<global::Google.Cloud.Diagnostics.Debug.Variable> _repeated_evaluatedExpressions_codec
        = pb::FieldCodec.ForMessage(82, global::Google.Cloud.Diagnostics.Debug.Variable.Parser);
    private readonly pbc::RepeatedField<global::Google.Cloud.Diagnostics.Debug.Variable> evaluatedExpressions_ = new pbc::RepeatedField<global::Google.Cloud.Diagnostics.Debug.Variable>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Cloud.Diagnostics.Debug.Variable> EvaluatedExpressions {
      get { return evaluatedExpressions_; }
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 11;
    private global::Google.Cloud.Diagnostics.Debug.Status status_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Diagnostics.Debug.Status Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Breakpoint);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Breakpoint other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (!object.Equals(Location, other.Location)) return false;
      if(!stackFrames_.Equals(other.stackFrames_)) return false;
      if (Activated != other.Activated) return false;
      if (!object.Equals(CreateTime, other.CreateTime)) return false;
      if (!object.Equals(FinalTime, other.FinalTime)) return false;
      if (KillServer != other.KillServer) return false;
      if(!expressions_.Equals(other.expressions_)) return false;
      if (Condition != other.Condition) return false;
      if(!evaluatedExpressions_.Equals(other.evaluatedExpressions_)) return false;
      if (!object.Equals(Status, other.Status)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (location_ != null) hash ^= Location.GetHashCode();
      hash ^= stackFrames_.GetHashCode();
      if (Activated != false) hash ^= Activated.GetHashCode();
      if (createTime_ != null) hash ^= CreateTime.GetHashCode();
      if (finalTime_ != null) hash ^= FinalTime.GetHashCode();
      if (KillServer != false) hash ^= KillServer.GetHashCode();
      hash ^= expressions_.GetHashCode();
      if (Condition.Length != 0) hash ^= Condition.GetHashCode();
      hash ^= evaluatedExpressions_.GetHashCode();
      if (status_ != null) hash ^= Status.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (location_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Location);
      }
      stackFrames_.WriteTo(output, _repeated_stackFrames_codec);
      if (Activated != false) {
        output.WriteRawTag(32);
        output.WriteBool(Activated);
      }
      if (createTime_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(CreateTime);
      }
      if (finalTime_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(FinalTime);
      }
      if (KillServer != false) {
        output.WriteRawTag(56);
        output.WriteBool(KillServer);
      }
      expressions_.WriteTo(output, _repeated_expressions_codec);
      if (Condition.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(Condition);
      }
      evaluatedExpressions_.WriteTo(output, _repeated_evaluatedExpressions_codec);
      if (status_ != null) {
        output.WriteRawTag(90);
        output.WriteMessage(Status);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (location_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Location);
      }
      size += stackFrames_.CalculateSize(_repeated_stackFrames_codec);
      if (Activated != false) {
        size += 1 + 1;
      }
      if (createTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CreateTime);
      }
      if (finalTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(FinalTime);
      }
      if (KillServer != false) {
        size += 1 + 1;
      }
      size += expressions_.CalculateSize(_repeated_expressions_codec);
      if (Condition.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Condition);
      }
      size += evaluatedExpressions_.CalculateSize(_repeated_evaluatedExpressions_codec);
      if (status_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Status);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Breakpoint other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.location_ != null) {
        if (location_ == null) {
          location_ = new global::Google.Cloud.Diagnostics.Debug.SourceLocation();
        }
        Location.MergeFrom(other.Location);
      }
      stackFrames_.Add(other.stackFrames_);
      if (other.Activated != false) {
        Activated = other.Activated;
      }
      if (other.createTime_ != null) {
        if (createTime_ == null) {
          createTime_ = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        CreateTime.MergeFrom(other.CreateTime);
      }
      if (other.finalTime_ != null) {
        if (finalTime_ == null) {
          finalTime_ = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        FinalTime.MergeFrom(other.FinalTime);
      }
      if (other.KillServer != false) {
        KillServer = other.KillServer;
      }
      expressions_.Add(other.expressions_);
      if (other.Condition.Length != 0) {
        Condition = other.Condition;
      }
      evaluatedExpressions_.Add(other.evaluatedExpressions_);
      if (other.status_ != null) {
        if (status_ == null) {
          status_ = new global::Google.Cloud.Diagnostics.Debug.Status();
        }
        Status.MergeFrom(other.Status);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            if (location_ == null) {
              location_ = new global::Google.Cloud.Diagnostics.Debug.SourceLocation();
            }
            input.ReadMessage(location_);
            break;
          }
          case 26: {
            stackFrames_.AddEntriesFrom(input, _repeated_stackFrames_codec);
            break;
          }
          case 32: {
            Activated = input.ReadBool();
            break;
          }
          case 42: {
            if (createTime_ == null) {
              createTime_ = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(createTime_);
            break;
          }
          case 50: {
            if (finalTime_ == null) {
              finalTime_ = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(finalTime_);
            break;
          }
          case 56: {
            KillServer = input.ReadBool();
            break;
          }
          case 66: {
            expressions_.AddEntriesFrom(input, _repeated_expressions_codec);
            break;
          }
          case 74: {
            Condition = input.ReadString();
            break;
          }
          case 82: {
            evaluatedExpressions_.AddEntriesFrom(input, _repeated_evaluatedExpressions_codec);
            break;
          }
          case 90: {
            if (status_ == null) {
              status_ = new global::Google.Cloud.Diagnostics.Debug.Status();
            }
            input.ReadMessage(status_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class StackFrame : pb::IMessage<StackFrame> {
    private static readonly pb::MessageParser<StackFrame> _parser = new pb::MessageParser<StackFrame>(() => new StackFrame());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<StackFrame> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Diagnostics.Debug.BreakpointReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StackFrame() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StackFrame(StackFrame other) : this() {
      methodName_ = other.methodName_;
      Location = other.location_ != null ? other.Location.Clone() : null;
      arguments_ = other.arguments_.Clone();
      locals_ = other.locals_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StackFrame Clone() {
      return new StackFrame(this);
    }

    /// <summary>Field number for the "method_name" field.</summary>
    public const int MethodNameFieldNumber = 1;
    private string methodName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MethodName {
      get { return methodName_; }
      set {
        methodName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "location" field.</summary>
    public const int LocationFieldNumber = 2;
    private global::Google.Cloud.Diagnostics.Debug.SourceLocation location_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Diagnostics.Debug.SourceLocation Location {
      get { return location_; }
      set {
        location_ = value;
      }
    }

    /// <summary>Field number for the "arguments" field.</summary>
    public const int ArgumentsFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Google.Cloud.Diagnostics.Debug.Variable> _repeated_arguments_codec
        = pb::FieldCodec.ForMessage(26, global::Google.Cloud.Diagnostics.Debug.Variable.Parser);
    private readonly pbc::RepeatedField<global::Google.Cloud.Diagnostics.Debug.Variable> arguments_ = new pbc::RepeatedField<global::Google.Cloud.Diagnostics.Debug.Variable>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Cloud.Diagnostics.Debug.Variable> Arguments {
      get { return arguments_; }
    }

    /// <summary>Field number for the "locals" field.</summary>
    public const int LocalsFieldNumber = 4;
    private static readonly pb::FieldCodec<global::Google.Cloud.Diagnostics.Debug.Variable> _repeated_locals_codec
        = pb::FieldCodec.ForMessage(34, global::Google.Cloud.Diagnostics.Debug.Variable.Parser);
    private readonly pbc::RepeatedField<global::Google.Cloud.Diagnostics.Debug.Variable> locals_ = new pbc::RepeatedField<global::Google.Cloud.Diagnostics.Debug.Variable>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Cloud.Diagnostics.Debug.Variable> Locals {
      get { return locals_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as StackFrame);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(StackFrame other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MethodName != other.MethodName) return false;
      if (!object.Equals(Location, other.Location)) return false;
      if(!arguments_.Equals(other.arguments_)) return false;
      if(!locals_.Equals(other.locals_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (MethodName.Length != 0) hash ^= MethodName.GetHashCode();
      if (location_ != null) hash ^= Location.GetHashCode();
      hash ^= arguments_.GetHashCode();
      hash ^= locals_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (MethodName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(MethodName);
      }
      if (location_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Location);
      }
      arguments_.WriteTo(output, _repeated_arguments_codec);
      locals_.WriteTo(output, _repeated_locals_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (MethodName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MethodName);
      }
      if (location_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Location);
      }
      size += arguments_.CalculateSize(_repeated_arguments_codec);
      size += locals_.CalculateSize(_repeated_locals_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(StackFrame other) {
      if (other == null) {
        return;
      }
      if (other.MethodName.Length != 0) {
        MethodName = other.MethodName;
      }
      if (other.location_ != null) {
        if (location_ == null) {
          location_ = new global::Google.Cloud.Diagnostics.Debug.SourceLocation();
        }
        Location.MergeFrom(other.Location);
      }
      arguments_.Add(other.arguments_);
      locals_.Add(other.locals_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            MethodName = input.ReadString();
            break;
          }
          case 18: {
            if (location_ == null) {
              location_ = new global::Google.Cloud.Diagnostics.Debug.SourceLocation();
            }
            input.ReadMessage(location_);
            break;
          }
          case 26: {
            arguments_.AddEntriesFrom(input, _repeated_arguments_codec);
            break;
          }
          case 34: {
            locals_.AddEntriesFrom(input, _repeated_locals_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class SourceLocation : pb::IMessage<SourceLocation> {
    private static readonly pb::MessageParser<SourceLocation> _parser = new pb::MessageParser<SourceLocation>(() => new SourceLocation());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SourceLocation> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Diagnostics.Debug.BreakpointReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SourceLocation() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SourceLocation(SourceLocation other) : this() {
      path_ = other.path_;
      line_ = other.line_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SourceLocation Clone() {
      return new SourceLocation(this);
    }

    /// <summary>Field number for the "path" field.</summary>
    public const int PathFieldNumber = 1;
    private string path_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Path {
      get { return path_; }
      set {
        path_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "line" field.</summary>
    public const int LineFieldNumber = 2;
    private int line_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Line {
      get { return line_; }
      set {
        line_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SourceLocation);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SourceLocation other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Path != other.Path) return false;
      if (Line != other.Line) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Path.Length != 0) hash ^= Path.GetHashCode();
      if (Line != 0) hash ^= Line.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Path.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Path);
      }
      if (Line != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Line);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Path.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Path);
      }
      if (Line != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Line);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SourceLocation other) {
      if (other == null) {
        return;
      }
      if (other.Path.Length != 0) {
        Path = other.Path;
      }
      if (other.Line != 0) {
        Line = other.Line;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            Path = input.ReadString();
            break;
          }
          case 16: {
            Line = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Variable : pb::IMessage<Variable> {
    private static readonly pb::MessageParser<Variable> _parser = new pb::MessageParser<Variable>(() => new Variable());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Variable> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Diagnostics.Debug.BreakpointReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Variable() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Variable(Variable other) : this() {
      name_ = other.name_;
      type_ = other.type_;
      value_ = other.value_;
      members_ = other.members_.Clone();
      Status = other.status_ != null ? other.Status.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Variable Clone() {
      return new Variable(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 2;
    private string type_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Type {
      get { return type_; }
      set {
        type_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 3;
    private string value_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Value {
      get { return value_; }
      set {
        value_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "members" field.</summary>
    public const int MembersFieldNumber = 4;
    private static readonly pb::FieldCodec<global::Google.Cloud.Diagnostics.Debug.Variable> _repeated_members_codec
        = pb::FieldCodec.ForMessage(34, global::Google.Cloud.Diagnostics.Debug.Variable.Parser);
    private readonly pbc::RepeatedField<global::Google.Cloud.Diagnostics.Debug.Variable> members_ = new pbc::RepeatedField<global::Google.Cloud.Diagnostics.Debug.Variable>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Cloud.Diagnostics.Debug.Variable> Members {
      get { return members_; }
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 5;
    private global::Google.Cloud.Diagnostics.Debug.Status status_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Diagnostics.Debug.Status Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Variable);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Variable other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (Type != other.Type) return false;
      if (Value != other.Value) return false;
      if(!members_.Equals(other.members_)) return false;
      if (!object.Equals(Status, other.Status)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Type.Length != 0) hash ^= Type.GetHashCode();
      if (Value.Length != 0) hash ^= Value.GetHashCode();
      hash ^= members_.GetHashCode();
      if (status_ != null) hash ^= Status.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Type.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Type);
      }
      if (Value.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Value);
      }
      members_.WriteTo(output, _repeated_members_codec);
      if (status_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Status);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Type.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Type);
      }
      if (Value.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Value);
      }
      size += members_.CalculateSize(_repeated_members_codec);
      if (status_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Status);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Variable other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Type.Length != 0) {
        Type = other.Type;
      }
      if (other.Value.Length != 0) {
        Value = other.Value;
      }
      members_.Add(other.members_);
      if (other.status_ != null) {
        if (status_ == null) {
          status_ = new global::Google.Cloud.Diagnostics.Debug.Status();
        }
        Status.MergeFrom(other.Status);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            Type = input.ReadString();
            break;
          }
          case 26: {
            Value = input.ReadString();
            break;
          }
          case 34: {
            members_.AddEntriesFrom(input, _repeated_members_codec);
            break;
          }
          case 42: {
            if (status_ == null) {
              status_ = new global::Google.Cloud.Diagnostics.Debug.Status();
            }
            input.ReadMessage(status_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class Status : pb::IMessage<Status> {
    private static readonly pb::MessageParser<Status> _parser = new pb::MessageParser<Status>(() => new Status());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Status> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Diagnostics.Debug.BreakpointReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Status() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Status(Status other) : this() {
      iserror_ = other.iserror_;
      message_ = other.message_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Status Clone() {
      return new Status(this);
    }

    /// <summary>Field number for the "iserror" field.</summary>
    public const int IserrorFieldNumber = 1;
    private bool iserror_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Iserror {
      get { return iserror_; }
      set {
        iserror_ = value;
      }
    }

    /// <summary>Field number for the "message" field.</summary>
    public const int MessageFieldNumber = 2;
    private string message_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Message {
      get { return message_; }
      set {
        message_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Status);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Status other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Iserror != other.Iserror) return false;
      if (Message != other.Message) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Iserror != false) hash ^= Iserror.GetHashCode();
      if (Message.Length != 0) hash ^= Message.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Iserror != false) {
        output.WriteRawTag(8);
        output.WriteBool(Iserror);
      }
      if (Message.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Message);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Iserror != false) {
        size += 1 + 1;
      }
      if (Message.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Message);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Status other) {
      if (other == null) {
        return;
      }
      if (other.Iserror != false) {
        Iserror = other.Iserror;
      }
      if (other.Message.Length != 0) {
        Message = other.Message;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Iserror = input.ReadBool();
            break;
          }
          case 18: {
            Message = input.ReadString();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
